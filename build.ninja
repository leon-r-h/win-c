## Basic-Configuration
cc         = clang
build_name = win-c
build_dir  = build
source_dir = source
include_dir = include

## Compilation flags
common_flags = -std=c2y -ffast-math -Wall -Wextra -Wconversion -Wshadow -fdiagnostics-color=always -fansi-escape-codes -fno-short-wchar

## Platform-Specific Flags
### Windows
extension = .exe
### Unix
# extension =

## Optimization
###  Release Flag
release_flags = -O3 -DNDEBUG -g0 -fno-stack-protector -fomit-frame-pointer -flto -ffunction-sections -fdata-sections
### Debug Flags
debug_flags = -Og -g3 -fsanitize=address,undefined -fstack-protector-all

## Linker Flags
release_linker_flags = -Wl,-s
debug_linker_flags = 

## Compilation Rules
rule compile
    command = $cc -c $in $common_flags -I $include_dir$ -o $out $flags
    description = Compiling $in to $out

rule link
    command = $cc $in $common_flags $include_dir -o $out $flags $linker_flags
    description = Linking $in to $out

## IDE Generation Rules (Windows)
rule ide_windows
    command = ide.cmd $out
    description = Generating $out

## Build Configurations
### Set Debug as default build type (uncomment to switch to Release)
flags = $debug_flags
linker_flags = $debug_linker_flags

### For Release builds, uncomment the following lines:
# flags = $release_flags
# linker_flags = $release_linker_flags

## Build instructions
### Object file Compilation
build $build_dir/main.o: compile $source_dir/main.c

### Linking
build $build_dir/$build_name$extension: link $build_dir/main.o
    flags = $flags $linker_flags

### IDE project generation
build compile_commands.json: ide_windows
